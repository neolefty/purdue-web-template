# Deployment Configuration File
# This file contains all deployment-specific variables
# Copy this to /etc/template/deploy.conf and customize for your environment

# Python version to use (optional, defaults to python3)
# PYTHON="python3.13"

# Application Settings
APP_NAME="template"
APP_DIR="/opt/apps/template"
APP_USER="www-data"
APP_GROUP="www-data"

# Server Settings
SERVER_NAME="myapp.purdue.edu"
CLIENT_MAX_SIZE="100M"

# SSL Certificate Paths
# For Let's Encrypt:
SSL_CERT="/etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem"
SSL_KEY="/etc/letsencrypt/live/${SERVER_NAME}/privkey.pem"
# For Purdue/InCommon certificates:
# SSL_CERT="/etc/ssl/certs/${SERVER_NAME}.crt"
# SSL_KEY="/etc/ssl/private/${SERVER_NAME}.key"

# Runtime Paths
SOCKET_PATH="/var/run/${APP_NAME}.sock"
PID_FILE="/var/run/${APP_NAME}.pid"
LOG_DIR="/var/log/${APP_NAME}"

# Database Settings (for production .env)
DB_ENGINE="postgresql"  # postgresql, mysql, mssql, oracle, sqlite
DB_NAME="template_db"
DB_USER="template_user"
DB_PASSWORD=""  # Set in production
DB_HOST="localhost"
DB_PORT="5432"

# Django Settings
DJANGO_SECRET_KEY=""  # Generate with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
DJANGO_DEBUG="False"
DJANGO_ALLOWED_HOSTS="${SERVER_NAME},localhost,127.0.0.1"

# Authentication Method
AUTH_METHOD="saml"  # 'saml' for Purdue SSO, 'email' for email/password

# SAML Settings (if using Purdue SSO)
SAML_SP_ENTITY_ID="https://${SERVER_NAME}"
SAML_SP_ACS_URL="https://${SERVER_NAME}/api/auth/saml/acs/"
SAML_SP_SLS_URL="https://${SERVER_NAME}/api/auth/saml/sls/"

# Email Settings (for notifications)
EMAIL_HOST="smtp.purdue.edu"
EMAIL_PORT="587"
EMAIL_USE_TLS="True"
EMAIL_HOST_USER=""
EMAIL_HOST_PASSWORD=""
DEFAULT_FROM_EMAIL="noreply@${SERVER_NAME}"

# CORS Settings
CORS_ALLOWED_ORIGINS="https://${SERVER_NAME}"

# Gunicorn Settings
GUNICORN_WORKERS="5"  # Or: $(( $(nproc) * 2 + 1 ))
GUNICORN_WORKER_CLASS="sync"  # sync, gevent, eventlet, gthread
GUNICORN_THREADS="1"  # Threads per worker (gthread only)
GUNICORN_WORKER_CONNECTIONS="1000"  # Max connections (async workers)
GUNICORN_TIMEOUT="30"
GUNICORN_KEEPALIVE="2"
GUNICORN_MAX_REQUESTS="1000"
GUNICORN_MAX_REQUESTS_JITTER="50"
GUNICORN_BACKLOG="2048"
GUNICORN_LOG_LEVEL="info"
GUNICORN_CAPTURE_OUTPUT="False"
GUNICORN_PRELOAD="False"
GUNICORN_RELOAD="False"
GUNICORN_LIMIT_REQUEST_LINE="4094"
GUNICORN_LIMIT_REQUEST_FIELDS="100"
GUNICORN_LIMIT_REQUEST_FIELD_SIZE="8190"

# Backup Settings
BACKUP_DIR="/var/backups/${APP_NAME}"
BACKUP_RETENTION_DAYS="30"

# Monitoring
HEALTH_CHECK_URL="https://${SERVER_NAME}/health"
ALERT_EMAIL="admin@purdue.edu"
