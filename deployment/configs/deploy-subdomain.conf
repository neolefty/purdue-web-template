# Deployment Configuration for Subdomain-Based Environments
# Each environment gets its own subdomain:
#   - django-template-dev.ag.purdue.edu
#   - django-template-qa.ag.purdue.edu
#   - django-template-prod.ag.purdue.edu
# Copy this to /etc/django-template/deploy-{env}.conf and customize

# Environment Configuration
ENVIRONMENT="dev"  # dev, qa, or prod
APP_BASE_NAME="django-template"
APP_NAME="${APP_BASE_NAME}-${ENVIRONMENT}"
APP_DIR="/opt/apps/${APP_NAME}"
APP_USER="nginx"
APP_GROUP="nginx"

# Server Settings
SERVER_NAME="${APP_NAME}.ag.purdue.edu"
CLIENT_MAX_SIZE="100M"

# SSL Certificate Paths
# Option 1: Wildcard cert for *.ag.purdue.edu
SSL_CERT="/etc/nginx/certs/ag.purdue.edu.crt"
SSL_KEY="/etc/nginx/certs/ag.purdue.edu.key"
# Option 2: Environment-specific cert
# SSL_CERT="/etc/nginx/certs/${SERVER_NAME}.crt"
# SSL_KEY="/etc/nginx/certs/${SERVER_NAME}.key"
# Option 3: Let's Encrypt
# SSL_CERT="/etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem"
# SSL_KEY="/etc/letsencrypt/live/${SERVER_NAME}/privkey.pem"

# Runtime Paths
SOCKET_PATH="/run/gunicorn_${APP_NAME}.sock"
PID_FILE="/run/${APP_NAME}.pid"
LOG_DIR="/var/log/${APP_NAME}"

# Database Settings (environment-specific)
DB_ENGINE="postgresql"
DB_NAME="${APP_BASE_NAME}_${ENVIRONMENT}"
DB_USER="${APP_BASE_NAME}_user"
DB_PASSWORD=""  # Set in production, different per environment
DB_HOST="localhost"
DB_PORT="5432"

# Django Settings
DJANGO_SECRET_KEY=""  # Generate unique key per environment
DJANGO_DEBUG="True"  # Set to False for qa and prod
DJANGO_ALLOWED_HOSTS="${SERVER_NAME},localhost,127.0.0.1"

# Authentication Method
AUTH_METHOD="saml"  # Purdue SSO

# SAML Settings
SAML_SP_ENTITY_ID="https://${SERVER_NAME}"
SAML_SP_ACS_URL="https://${SERVER_NAME}/api/auth/saml/acs/"
SAML_SP_SLS_URL="https://${SERVER_NAME}/api/auth/saml/sls/"

# Email Settings
EMAIL_HOST="smtp.purdue.edu"
EMAIL_PORT="587"
EMAIL_USE_TLS="True"
EMAIL_HOST_USER=""
EMAIL_HOST_PASSWORD=""
DEFAULT_FROM_EMAIL="noreply@${SERVER_NAME}"

# CORS Settings
CORS_ALLOWED_ORIGINS="https://${SERVER_NAME}"

# Gunicorn Settings (tune per environment)
if [[ "${ENVIRONMENT}" == "prod" ]]; then
    GUNICORN_WORKERS="8"
    GUNICORN_MAX_REQUESTS="2000"
    GUNICORN_LOG_LEVEL="warning"
elif [[ "${ENVIRONMENT}" == "qa" ]]; then
    GUNICORN_WORKERS="4"
    GUNICORN_MAX_REQUESTS="1000"
    GUNICORN_LOG_LEVEL="info"
else  # dev
    GUNICORN_WORKERS="2"
    GUNICORN_MAX_REQUESTS="500"
    GUNICORN_LOG_LEVEL="debug"
fi

GUNICORN_WORKER_CLASS="sync"
GUNICORN_THREADS="1"
GUNICORN_WORKER_CONNECTIONS="1000"
GUNICORN_TIMEOUT="30"
GUNICORN_KEEPALIVE="2"
GUNICORN_MAX_REQUESTS_JITTER="50"
GUNICORN_BACKLOG="2048"
GUNICORN_CAPTURE_OUTPUT="False"
GUNICORN_PRELOAD="False"
GUNICORN_RELOAD="False"
GUNICORN_LIMIT_REQUEST_LINE="4094"
GUNICORN_LIMIT_REQUEST_FIELDS="100"
GUNICORN_LIMIT_REQUEST_FIELD_SIZE="8190"

# Backup Settings
BACKUP_DIR="/var/backups/${APP_NAME}"
BACKUP_RETENTION_DAYS="30"  # Maybe longer for prod

# Monitoring
HEALTH_CHECK_URL="https://${SERVER_NAME}/api/health/"
ALERT_EMAIL="ag-webteam@purdue.edu"

# Environment-Specific Features
if [[ "${ENVIRONMENT}" == "dev" ]]; then
    # Development settings
    DJANGO_DEBUG="True"
    GUNICORN_RELOAD="True"  # Auto-reload on code changes
    BACKUP_RETENTION_DAYS="7"
elif [[ "${ENVIRONMENT}" == "qa" ]]; then
    # QA/Staging settings
    DJANGO_DEBUG="False"
    BACKUP_RETENTION_DAYS="14"
elif [[ "${ENVIRONMENT}" == "prod" ]]; then
    # Production settings
    DJANGO_DEBUG="False"
    BACKUP_RETENTION_DAYS="90"
    # Could add production-specific monitoring, APM, etc.
fi
