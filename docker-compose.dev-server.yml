services:
  # PostgreSQL Database
  db-dev:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: purdue_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Django backend with gunicorn and hot reload
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      gunicorn
        --reload
        --bind 0.0.0.0:8000
        --workers 1
        --access-logfile -
        --error-logfile -
        --log-level info
        config.wsgi:application
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      DEBUG: "False"  # Use production settings but with reload
      SECRET_KEY: "django-insecure-dev-server-testing-key-change-in-production"
      ALLOWED_HOSTS: "localhost,127.0.0.1,host.docker.internal"
      DATABASE_ENGINE: postgresql
      DB_NAME: purdue_app
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: db-dev
      DB_PORT: 5432
      AUTH_METHOD: email
      CORS_ALLOWED_ORIGINS: "http://localhost:5173,http://localhost:3000"
      DJANGO_SETTINGS_MODULE: config.settings.production
      # No REDIS_URL so it uses local memory cache
    depends_on:
      db-dev:
        condition: service_healthy

  # Frontend with Vite dev server
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: npm run dev -- --host 0.0.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend-dev

  # Nginx to serve everything (mimics production)
  nginx-dev:
    image: nginx:alpine
    volumes:
      - ./deployment/nginx-dev-reload.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/static
      - media_volume:/media
    ports:
      - "8080:80"  # Use 8080 to avoid conflict with main compose
    depends_on:
      - backend-dev
      - frontend-dev

volumes:
  postgres_data:
  static_volume:
  media_volume:
