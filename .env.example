# Django-React Template Configuration
# Copy this file to .env and update with your values

# ==============================================================================
# DJANGO SETTINGS
# ==============================================================================

# Security
# Generate a secure SECRET_KEY with one of these methods:
#   Python: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
#   OpenSSL: openssl rand -base64 50
#   Linux/Mac: head -c 50 /dev/urandom | base64
SECRET_KEY=your-secret-key-here-change-in-production
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1,backend

# Default superuser (created on first run if no admin exists)
# Change this to something secure before running docker compose up!
DEFAULT_SUPERUSER_PASSWORD=admin123

# ==============================================================================
# DATABASE CONFIGURATION
# ==============================================================================

# Database engine options: postgresql, mysql, mssql, oracle, sqlite
DATABASE_ENGINE=postgresql
DB_NAME=purdue_app
DB_USER=postgres
DB_PASSWORD=postgres
DB_HOST=db
DB_PORT=5432

# ==============================================================================
# AUTHENTICATION
# ==============================================================================

# Auth method options: email, saml
AUTH_METHOD=email

# SAML Configuration (uncomment if using SAML)
# SAML_ENTITY_ID=https://yourapp.purdue.edu/saml/metadata/
# SAML_ACS_URL=https://yourapp.purdue.edu/saml/acs/
# SAML_SLS_URL=https://yourapp.purdue.edu/saml/sls/
# SAML_METADATA_URL=https://www.purdue.edu/apps/account/saml/metadata.xml
# SAML_KEY_FILE=/app/saml/private.key
# SAML_CERT_FILE=/app/saml/public.cert

# ==============================================================================
# FRONTEND CONFIGURATION
# ==============================================================================

# Frontend port (default: 5173)
# Change this to run multiple instances of the app simultaneously
FRONTEND_PORT=5173

# CORS settings
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000

# ==============================================================================
# OPTIONAL SERVICES
# ==============================================================================

# Redis (for caching and sessions)
# REDIS_URL=redis://redis:6379/1

# ==============================================================================
# EMAIL CONFIGURATION (Production)
# ==============================================================================

# Email backend options:
#   django.core.mail.backends.smtp.EmailBackend (default - for production)
#   django.core.mail.backends.console.EmailBackend (prints to console - for development)
#   django.core.mail.backends.filebased.EmailBackend (saves to files - for testing)
#   django.core.mail.backends.dummy.EmailBackend (does nothing - to disable email)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP settings (when using SMTP backend)
# For Purdue internal servers (like 42ddjang01.ag.purdue.edu):
#   - No authentication needed (leave EMAIL_HOST_USER and EMAIL_HOST_PASSWORD empty)
#   - Use port 587 with TLS
# EMAIL_HOST=smtp.purdue.edu
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=
# EMAIL_TIMEOUT=10

# Email addresses
# DEFAULT_FROM_EMAIL=noreply@purdue.edu
# SERVER_EMAIL=noreply@purdue.edu
# EMAIL_SUBJECT_PREFIX=[Django]

# File backend settings (when using filebased backend)
# EMAIL_FILE_PATH=/path/to/email/files

# ==============================================================================
# ERROR TRACKING (Production)
# ==============================================================================

# Sentry configuration
# SENTRY_DSN=
# SENTRY_TRACES_SAMPLE_RATE=0.1

# ==============================================================================
# NOTES
# ==============================================================================
# - Database ports (PostgreSQL 5432, Redis 6379) are internal to Docker
#   and don't need to be changed for multiple instances
# - For production deployment, see deployment/README.md
