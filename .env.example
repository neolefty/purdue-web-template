# Django-React Template Configuration
# Copy this file to .env and update with your values

# ==============================================================================
# COMMON DEVELOPMENT SETTINGS
# ==============================================================================
# These are the settings you'll most likely change during development

# Port configuration (change these to run multiple instances simultaneously)
FRONTEND_PORT=5173
DB_HOST_PORT=5432

# Default superuser (created on first run if no admin exists)
# ⚠️  CHANGE THIS before running docker compose up!
DEFAULT_SUPERUSER_PASSWORD=admin123

# ==============================================================================
# CORE ARCHITECTURE
# ==============================================================================
# Key decisions about how your application works

# Authentication method: email (login with email/password) or saml (Purdue SSO)
AUTH_METHOD=email

# Require email verification for new accounts (only applies when AUTH_METHOD=email)
# When enabled, users must verify their email before they can log in
REQUIRE_EMAIL_VERIFICATION=False

# Database engine: postgresql, mysql, mssql, oracle, or sqlite
DATABASE_ENGINE=postgresql

# ==============================================================================
# DJANGO CONFIGURATION
# ==============================================================================
# Standard Django settings (defaults work fine for development)

DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1,backend

# Security key - generate a new one for production with:
#   python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
#   openssl rand -base64 50
#   head -c 50 /dev/urandom | base64
SECRET_KEY=your-secret-key-here-change-in-production

# ==============================================================================
# DATABASE CONNECTION
# ==============================================================================
# PostgreSQL connection details (defaults work for local development)

DB_NAME=purdue_app
DB_USER=postgres
DB_PASSWORD=postgres
DB_HOST=db

# ==============================================================================
# CORS CONFIGURATION
# ==============================================================================
# Update these if you change FRONTEND_PORT

CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000

# ==============================================================================
# SAML AUTHENTICATION (Advanced)
# ==============================================================================
# Uncomment and configure if using AUTH_METHOD=saml

# SAML_ENTITY_ID=https://yourapp.purdue.edu/saml/metadata/
# SAML_ACS_URL=https://yourapp.purdue.edu/saml/acs/
# SAML_SLS_URL=https://yourapp.purdue.edu/saml/sls/
# SAML_METADATA_URL=https://www.purdue.edu/apps/account/saml/metadata.xml
# SAML_KEY_FILE=/app/saml/private.key
# SAML_CERT_FILE=/app/saml/public.cert

# ==============================================================================
# OPTIONAL SERVICES
# ==============================================================================

# Redis (for caching and sessions)
# REDIS_URL=redis://redis:6379/1

# ==============================================================================
# PRODUCTION SETTINGS
# ==============================================================================
# Only needed when deploying to production

# Email Configuration
# Backend options:
#   django.core.mail.backends.smtp.EmailBackend (production - sends real emails)
#   django.core.mail.backends.console.EmailBackend (development - prints to console)
#   django.core.mail.backends.filebased.EmailBackend (testing - saves to files)
#   django.core.mail.backends.dummy.EmailBackend (disables email completely)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP settings (for production email backend)
# For Purdue internal servers (like 42ddjang01.ag.purdue.edu):
#   - No authentication needed (leave EMAIL_HOST_USER and EMAIL_HOST_PASSWORD empty)
#   - Use port 587 with TLS
# EMAIL_HOST=smtp.purdue.edu
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False
# EMAIL_HOST_USER=
# EMAIL_HOST_PASSWORD=
# EMAIL_TIMEOUT=10
# DEFAULT_FROM_EMAIL=noreply@purdue.edu
# SERVER_EMAIL=noreply@purdue.edu
# EMAIL_SUBJECT_PREFIX=[Django]

# Error Tracking
# SENTRY_DSN=
# SENTRY_TRACES_SAMPLE_RATE=0.1

# ==============================================================================
# NOTES
# ==============================================================================
# - To run multiple instances simultaneously, change FRONTEND_PORT and DB_HOST_PORT
# - Internal Docker networking uses standard ports (PostgreSQL 5432, Redis 6379)
# - For production deployment, see deployment/README.md
